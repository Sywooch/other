<?php

$_SERVER['SERVER_NAME'] = 'unit-test.loc';
require_once __DIR__ . '/../../unit-test.loc.php';
require_once __DIR__ . '/../../config/config.php';
require_once __DIR__ . '/../repository/OrderRepository.class.php';

use Referral\Repository\OrderRepository;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-03-25 at 10:10:53.
 */
class OrderRepositoryTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var OrderRepository
     */
    protected $object;

    /**
     * @var CMS
     */
    protected $cms;

    private $testOrders = array(
        array('referralId' => 1, 'orderId' => 1, 'purchase' => 30),
        array('referralId' => 3, 'orderId' => 2, 'purchase' => 30),
        array('referralId' => 2, 'orderId' => 3, 'purchase' => 30),
        array('referralId' => 4, 'orderId' => 4, 'purchase' => 30),
        array('referralId' => 5, 'orderId' => 5, 'purchase' => 30),
        array('referralId' => 11, 'orderId' => 11, 'purchase' => 30),
        array('referralId' => 12, 'orderId' => 12, 'purchase' => 30),
    );

    /**
     * Constructs a test case with the given name.
     *
     * @param  string $name
     * @param  array  $data
     * @param  string $dataName
     */
    public function __construct($name = NULL, array $data = array(), $dataName = '')
    {
        parent::__construct($name, $data, $dataName);
        exec("mysql -u" . DB_USER . " -p" . DB_PASS . " " . DB_BASE . " < " . __DIR__ . "/_files/site_referral_orders.sql");
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->cms = new CMS();
        $this->cms->Check();
        $this->object = new OrderRepository($this->cms);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers OrderRepository::AddOrder
     */
    public function testAddOrder()
    {
        foreach($this->testOrders as $order){
            $this->object->AddOrder($order['referralId'], $order['orderId'], $order['purchase']);
            $orderExists = $this->cms->querySingleValue("
                SELECT COUNT(*)
                FROM `site_referral_orders`
                WHERE `order_id` = {$order['orderId']}
            ");
            $this->assertTrue($orderExists > 0, "Ошибка добавления заказа");
        }
    }

    /**
     * @covers OrderRepository::DeleteOrder
     * @depends testAddOrder
     */
    public function testDeleteOrder()
    {
        $this->object->DeleteOrder(-2);
        $orderExists = $this->cms->querySingleValue("
            SELECT COUNT(*)
            FROM `site_referral_orders`
            WHERE `order_id` = '-2'
        ");

        $this->assertTrue($orderExists == 0, "Ошибка удаления заказа");
    }
}
